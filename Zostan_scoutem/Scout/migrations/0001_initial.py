# Generated by Django 2.0 on 2017-12-19 14:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Nazwa')),
                ('city', models.CharField(max_length=32, verbose_name='Miasto')),
                ('league', models.CharField(max_length=32, verbose_name='Liga')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2018)], verbose_name='Rok założenia')),
                ('reputation', models.IntegerField(choices=[(1, '*'), (2, '**'), (3, '***'), (4, '****'), (5, '*****')], verbose_name='Reputacja')),
                ('money', models.IntegerField(choices=[(1, 'bida aż piszczy'), (2, 'jest na wodę'), (3, 'woda + buty'), (4, 'bogaty wujek'), (5, 'jak u Abramowicza')], verbose_name='Stan finansów')),
                ('arena_name', models.CharField(max_length=32, verbose_name='Nazwa stadionu')),
                ('arena_capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)], verbose_name='Pojemność stadionu')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64, verbose_name='Imię')),
                ('last_name', models.CharField(max_length=64, verbose_name='Naziwsko')),
                ('pseudo', models.CharField(max_length=64, verbose_name='Pseudonim')),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Wiek')),
                ('weight', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Waga')),
                ('nationality', models.CharField(max_length=64, verbose_name='Narodowość')),
                ('paid', models.CharField(max_length=34, verbose_name='Wartość')),
                ('ca', models.IntegerField(choices=[(1, '*'), (2, '**'), (3, '***'), (4, '****'), (5, '*****')], verbose_name='Obecne umiejętności')),
                ('pa', models.IntegerField(choices=[(1, '*'), (2, '**'), (3, '***'), (4, '****'), (5, '*****')], verbose_name='Potencjalne umiejętnośći')),
                ('leg', models.IntegerField(choices=[(1, 'lewa'), (2, 'prawa'), (3, 'obie'), (4, 'obie chujowe')], verbose_name='Preferowana noga')),
                ('position', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Bramkarz'), (2, 'Prawy obrońca'), (3, 'Środkowy obrońca'), (4, 'Lewy obrońca'), (5, 'Prawy wahadłowy'), (6, 'Lewy wahadłowy'), (7, 'Defensywny pomocnik'), (8, 'Prawy pomocnik'), (9, 'Środkowy pomocnik'), (10, 'Lewy pomocnik'), (11, 'Wysunięty rozgrywający'), (12, 'Napastnik')], max_length=26, verbose_name='Pozycje')),
                ('dos', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Dośrodkowania')),
                ('dryb', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Drybling')),
                ('glow', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Gra głową')),
                ('kry', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Krycie')),
                ('odb', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Odbiór piłki')),
                ('pod', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Podania')),
                ('przy', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Przyjęcie')),
                ('rzk', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='rzuty karne')),
                ('rzr', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Rzuty rożne')),
                ('rzw', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Rzuty wolne')),
                ('tech', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Technika')),
                ('wyk', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Wykańczanie akcji')),
                ('agre', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Agresja')),
                ('dec', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Decyzje')),
                ('det', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Determinacja')),
                ('konc', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Koncentracja')),
                ('opa', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Opanowanie')),
                ('prac', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Pracowitość')),
                ('prze', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Przewidywanie')),
                ('przyw', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Przywodztwo')),
                ('wale', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Waleczność')),
                ('wsp', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Współpraca')),
                ('przys', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Przyspieszenie')),
                ('row', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Równowaga')),
                ('sil', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Siła')),
                ('sko', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Skoczność')),
                ('spr', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Sprawność')),
                ('szybk', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Szybkość')),
                ('wytrz', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Wytrzymałość')),
                ('zwinn', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='zwinność')),
                ('chwy', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Chwytanie')),
                ('eksc', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Ekscentryczność')),
                ('gnp', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Gra na przedpolu')),
                ('jnj', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Jeden na jednego')),
                ('komu', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Komunikacja')),
                ('refl', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Refleks')),
                ('sdp', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Skłonność do piąstkowania')),
                ('wdp', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Wyjścia do piłki')),
                ('wyko', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Wykopy')),
                ('wyrz', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Wyrzuty')),
                ('zawys', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Zasięg wyskoku')),
                ('hajto', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'gra z wątroby'), (2, 'nie gubi chleba'), (3, 'truskawka na torcie'), (4, 'ma utomatyzmy'), (5, 'jest turbo'), (6, 'gra z kija'), (7, 'ma detale'), (8, 'gra piłkę życzliwą'), (9, 'widać, że mu się chce')], max_length=17, verbose_name='cechy by Hajto')),
                ('bclas', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'setka w 3 sekundy'), (2, 'Karyna na trybunach'), (3, 'brzuch piwny'), (4, 'mądrzejszy od trenera'), (5, 'modne włosy'), (6, 'boiskowy brutal'), (7, 'szybko się gotuje'), (8, 'nieodporny na szyderę z trybun')], max_length=15, verbose_name='cechy B-klasowe')),
                ('description', models.TextField()),
                ('clubs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club', to='Scout.Club', verbose_name='Klub')),
            ],
        ),
    ]
